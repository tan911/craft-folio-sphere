// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  profile   Profile?
  about     About?
  work      Work[]
  project   Project[]
  contact   Contact?
}

model Profile {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  firstName String   @db.VarChar(10)
  lastName  String   @db.VarChar(10)
  socials   Json
  updatedAt DateTime @default(now()) @map("updated_at")
}

model About {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [aboutId], references: [id])
  aboutId     Int      @unique
  title       String   @db.VarChar(30)
  description String   @db.VarChar(100)
  updateAt    DateTime @default(now()) @map("updated_at")
}

model Work {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [workId], references: [id])
  workId      Int      @unique
  position    String   @db.VarChar(20)
  companyName String   @map("name_of_company") @db.VarChar(20)
  location    String   @db.VarChar(20)
  startDate   DateTime @map("start_date") @db.Date
  endDate     DateTime @map("end_date") @db.Date
  updateAt    DateTime @default(now()) @map("updated_at")
}

model Project {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [projectId], references: [id])
  projectId   Int      @unique
  name        String   @db.VarChar(20)
  description String   @db.VarChar(50)
  image       Json
  techStack   Json     @map("teck_stack")
  updatedAt   DateTime @default(now()) @map("updated_at")
}

model Contact {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [contactId], references: [id])
  contactId Int      @unique @map("contact_id")
  address   String
  email     String
  phone     String
  updatedAt DateTime @default(now()) @map("updated_at")
}
